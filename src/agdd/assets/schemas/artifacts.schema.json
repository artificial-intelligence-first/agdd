{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/artificial-intelligence-first/agdd/schemas/artifacts/v1",
  "title": "AGDD Run Artifacts Structure v1",
  "description": "Directory structure and file schemas for AGDD run artifacts. Defines the canonical layout of runs/{run_id}/ directory.",
  "type": "object",
  "required": ["run_id", "artifacts"],
  "properties": {
    "run_id": {
      "type": "string",
      "description": "Unique run identifier",
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_-]+$"
    },
    "base_path": {
      "type": "string",
      "description": "Base directory path for runs (e.g., .runs/agents)",
      "default": ".runs/agents"
    },
    "artifacts": {
      "type": "object",
      "description": "Artifact files in the run directory",
      "required": ["logs.jsonl", "summary.json"],
      "properties": {
        "logs.jsonl": {
          "$ref": "#/definitions/logsJsonl"
        },
        "summary.json": {
          "$ref": "#/definitions/summaryJson"
        },
        "metrics.json": {
          "$ref": "#/definitions/metricsJson"
        },
        "costs.jsonl": {
          "$ref": "#/definitions/costsJsonl"
        },
        "plan.json": {
          "$ref": "#/definitions/planJson"
        }
      }
    }
  },
  "definitions": {
    "logsJsonl": {
      "type": "object",
      "description": "Append-only event log in JSON Lines format. Each line is an EventEnvelope (see event.schema.json).",
      "properties": {
        "format": {
          "const": "jsonl",
          "description": "File format: one JSON object per line"
        },
        "schema": {
          "const": "https://github.com/artificial-intelligence-first/agdd/schemas/event/v1",
          "description": "EventEnvelope schema reference"
        },
        "description": {
          "const": "Chronological log of all events during run execution"
        }
      },
      "examples": [
        {
          "format": "jsonl",
          "schema": "https://github.com/artificial-intelligence-first/agdd/schemas/event/v1",
          "sample_line": {
            "ts": 1698765432.123,
            "run_id": "run_abc123",
            "span_id": "span_def456",
            "type": "agent.start",
            "level": "info",
            "payload": {},
            "kv": {}
          }
        }
      ]
    },
    "summaryJson": {
      "type": "object",
      "description": "Run execution summary with aggregated metrics",
      "required": ["run_id", "total_logs", "cost_usd", "token_count"],
      "properties": {
        "run_id": {
          "type": "string",
          "description": "Run identifier"
        },
        "span_id": {
          "type": "string",
          "description": "Root span identifier"
        },
        "parent_span_id": {
          "type": "string",
          "description": "Parent span identifier if nested"
        },
        "slug": {
          "type": "string",
          "description": "Agent slug"
        },
        "total_logs": {
          "type": "integer",
          "description": "Total number of log entries",
          "minimum": 0
        },
        "cost_usd": {
          "type": "number",
          "description": "Total execution cost in USD",
          "minimum": 0
        },
        "token_count": {
          "type": "integer",
          "description": "Total token count across all operations",
          "minimum": 0
        },
        "run_dir": {
          "type": "string",
          "description": "Path to run directory"
        },
        "otel_enabled": {
          "type": "boolean",
          "description": "Whether OpenTelemetry tracing was enabled"
        },
        "agent_plan": {
          "type": "object",
          "description": "Agent execution plan summary"
        },
        "llm_plan": {
          "type": "object",
          "description": "LLM-specific plan snapshot"
        },
        "metrics": {
          "type": "object",
          "description": "Aggregated metrics from metrics.json",
          "additionalProperties": true
        }
      }
    },
    "metricsJson": {
      "type": "object",
      "description": "Time-series metrics collected during execution",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["run_id", "value", "timestamp"],
          "properties": {
            "run_id": {
              "type": "string"
            },
            "value": {
              "type": "number"
            },
            "timestamp": {
              "type": "number"
            }
          }
        }
      },
      "examples": [
        {
          "latency_ms": [
            {"run_id": "run_abc123", "value": 1234.5, "timestamp": 1698765432.123}
          ],
          "tokens": [
            {"run_id": "run_abc123", "value": 500, "timestamp": 1698765432.123}
          ]
        }
      ]
    },
    "costsJsonl": {
      "type": "object",
      "description": "Cost tracking records in JSON Lines format",
      "properties": {
        "format": {
          "const": "jsonl",
          "description": "File format: one JSON object per line"
        },
        "record_schema": {
          "type": "object",
          "required": ["timestamp", "model", "input_tokens", "output_tokens", "total_tokens", "cost_usd"],
          "properties": {
            "timestamp": {
              "type": "string",
              "description": "ISO 8601 timestamp"
            },
            "model": {
              "type": "string",
              "description": "Model identifier"
            },
            "input_tokens": {
              "type": "integer",
              "minimum": 0
            },
            "output_tokens": {
              "type": "integer",
              "minimum": 0
            },
            "total_tokens": {
              "type": "integer",
              "minimum": 0
            },
            "cost_usd": {
              "type": "number",
              "minimum": 0
            },
            "run_id": {
              "type": "string"
            },
            "step": {
              "type": "string"
            },
            "agent": {
              "type": "string"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "examples": [
        {
          "format": "jsonl",
          "sample_line": {
            "timestamp": "2024-10-30T12:34:56.789Z",
            "model": "gpt-4",
            "input_tokens": 100,
            "output_tokens": 50,
            "total_tokens": 150,
            "cost_usd": 0.0045,
            "run_id": "run_abc123",
            "agent": "code-reviewer",
            "metadata": {}
          }
        }
      ]
    },
    "planJson": {
      "type": "object",
      "description": "Execution plan snapshot (PlanIR)",
      "properties": {
        "chain": {
          "type": "array",
          "description": "Ordered fallback steps",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "provider": {
          "type": "string",
          "description": "Selected provider"
        },
        "model": {
          "type": "string",
          "description": "Selected model"
        },
        "use_batch": {
          "type": "boolean",
          "description": "Batch mode enabled"
        },
        "use_cache": {
          "type": "boolean",
          "description": "Cache enabled"
        },
        "structured_output": {
          "type": "boolean",
          "description": "Structured output mode enabled"
        },
        "moderation": {
          "type": "boolean",
          "description": "Moderation enabled"
        },
        "sla_ms": {
          "type": "integer",
          "description": "SLA in milliseconds",
          "minimum": 0
        },
        "cost_budget": {
          "type": "number",
          "description": "Cost budget in USD",
          "minimum": 0
        },
        "policy_snapshot": {
          "type": "object",
          "description": "Policy state at plan time",
          "properties": {
            "id": {"type": "string"},
            "version": {"type": "string"},
            "content_hash": {"type": "string"}
          }
        },
        "capabilities": {
          "type": "object",
          "description": "Capability matrix",
          "properties": {
            "tools": {"type": "boolean"},
            "structured_output": {"type": "boolean"},
            "vision": {"type": "boolean"},
            "audio": {"type": "boolean"}
          }
        }
      }
    }
  },
  "examples": [
    {
      "run_id": "run_abc123xyz",
      "base_path": ".runs/agents",
      "artifacts": {
        "logs.jsonl": {
          "format": "jsonl",
          "schema": "https://github.com/artificial-intelligence-first/agdd/schemas/event/v1",
          "description": "Chronological log of all events during run execution"
        },
        "summary.json": {
          "run_id": "run_abc123xyz",
          "span_id": "span_def456",
          "slug": "code-reviewer",
          "total_logs": 42,
          "cost_usd": 0.025,
          "token_count": 1500,
          "run_dir": ".runs/agents/run_abc123xyz",
          "otel_enabled": true,
          "metrics": {}
        },
        "metrics.json": {
          "latency_ms": [
            {"run_id": "run_abc123xyz", "value": 10333.0, "timestamp": 1698765432.123}
          ]
        },
        "costs.jsonl": {
          "format": "jsonl",
          "sample_line": {
            "timestamp": "2024-10-30T12:34:56.789Z",
            "model": "claude-3-opus",
            "input_tokens": 1000,
            "output_tokens": 500,
            "total_tokens": 1500,
            "cost_usd": 0.025,
            "run_id": "run_abc123xyz",
            "agent": "code-reviewer"
          }
        },
        "plan.json": {
          "chain": [],
          "provider": "anthropic",
          "model": "claude-3-opus",
          "use_batch": false,
          "use_cache": true,
          "structured_output": false,
          "moderation": true,
          "sla_ms": 30000,
          "cost_budget": 1.0
        }
      }
    }
  ]
}
