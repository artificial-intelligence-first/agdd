[build-system]
requires = ["setuptools>=69.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agdd"
version = "0.1.0"
description = "Framework for AG-Driven Development (AGDD) systems"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "jsonschema>=4.25.1",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    "pyyaml>=6.0.2",
    "typer>=0.12.5",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "aiofiles>=23.2.0",
    "httpx>=0.27.0",
    "anyio>=4.0.0",
    "openai>=1.59.5",
]

[project.optional-dependencies]
# Development tools (testing, linting, type checking)
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=0.23.0",
    "mypy>=1.11.0",
    "types-PyYAML>=6.0.12.20241230",
    "types-jsonschema>=4.25.1.20251009",
    "types-aiofiles>=25.1.0.20251011",
    "types-redis>=4.6.0.20241004",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.0",
]
redis = [
    "redis>=5.0.0",
]
postgres = [
    "asyncpg>=0.29.0",
]
faiss = [
    "faiss-cpu>=1.8.0",
]
cache = [
    "numpy>=1.24.0",
]
observability = [
    "opentelemetry-api>=1.27.0",
    "opentelemetry-sdk>=1.27.0",
    "opentelemetry-exporter-otlp>=1.27.0",
    "langfuse>=2.50.0",
]
google = [
    "google-generativeai>=0.8.0",
    "google-genai>=0.2.0",
]
# For exposing agents as MCP tools (server functionality)
mcp-server = [
    "mcp>=1.0.0",
]
# For skills using MCP servers (client functionality)
mcp-client = [
    "asyncpg>=0.29.0",  # For PostgreSQL MCP servers
]
# Both MCP client and server functionality
mcp = [
    "agdd[mcp-client,mcp-server]",
]
# Recommended for production deployments
production = [
    "agdd[mcp,postgres,redis,observability]",
]
# Everything including dev tools
all = [
    "agdd[dev,production]",
]


[project.scripts]
agdd = "agdd.cli:app"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["agdd*"]

[tool.setuptools.package-data]
"agdd" = [
    "assets/**/*.json",
    "assets/**/*.yaml",
    "assets/**/*.yml",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.mypy]
python_version = "3.12"
warn_unused_ignores = true
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-q -m 'not slow'"
pythonpath = [
    ".",
    "src",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv", "build", "dist"]
skips = ["B101"]  # Skip assert_used (commonly used in tests)
